[{"/home/przem/Desktop/Builders/client/src/index.js":"1","/home/przem/Desktop/Builders/client/src/Routes.js":"2","/home/przem/Desktop/Builders/client/src/Layout/Layout.js":"3","/home/przem/Desktop/Builders/client/src/Utils/Aux.js":"4","/home/przem/Desktop/Builders/client/src/MainComponents/Home.js":"5","/home/przem/Desktop/Builders/client/src/MainComponents/Menu.js":"6","/home/przem/Desktop/Builders/client/src/User/Signin.js":"7","/home/przem/Desktop/Builders/client/src/User/Signup.js":"8","/home/przem/Desktop/Builders/client/src/StyledComponents/StyledLink.js":"9","/home/przem/Desktop/Builders/client/src/Header/Header.js":"10","/home/przem/Desktop/Builders/client/src/HeaderSecondary/HeaderSecondary.js":"11","/home/przem/Desktop/Builders/client/src/MainPicture/MainPicture.js":"12","/home/przem/Desktop/Builders/client/src/MainComponents/About.js":"13","/home/przem/Desktop/Builders/client/src/UpperContent/UpperContent.js":"14","/home/przem/Desktop/Builders/client/src/ConstructionWorkPage/ConstructionWork.js":"15","/home/przem/Desktop/Builders/client/src/SteelWorkPage/SteelWork.js":"16","/home/przem/Desktop/Builders/client/src/ScaffoldingPage/Scaffolding.js":"17","/home/przem/Desktop/Builders/client/src/Footer/Footer.js":"18","/home/przem/Desktop/Builders/client/src/config.js":"19","/home/przem/Desktop/Builders/client/src/Admin/Admin.js":"20","/home/przem/Desktop/Builders/client/src/Admin/auth/index.js":"21","/home/przem/Desktop/Builders/client/src/Admin/auth/AdminRoute.js":"22","/home/przem/Desktop/Builders/client/src/Admin/APIs/CategoryAPIs.js":"23","/home/przem/Desktop/Builders/client/src/Admin/APIs/PhotoApis.js":"24","/home/przem/Desktop/Builders/client/src/Gallery/Gallery.js":"25","/home/przem/Desktop/Builders/client/src/Gallery/Spinner.js":"26","/home/przem/Desktop/Builders/client/src/Comments/Comments.js":"27","/home/przem/Desktop/Builders/client/src/Admin/APIs/CommentsApis.js":"28","/home/przem/Desktop/Builders/client/src/Comments/Comment.js":"29","/home/przem/Desktop/Builders/client/src/Confirmation/Email.js":"30","/home/przem/Desktop/Builders/client/src/Confirmation/Comment.js":"31","/home/przem/Desktop/Builders/client/src/Email/Email.js":"32","/home/przem/Desktop/Builders/client/src/Admin/APIs/EmailAPI.js":"33"},{"size":203,"mtime":1611582882832,"results":"34","hashOfConfig":"35"},{"size":1788,"mtime":1611771651798,"results":"36","hashOfConfig":"35"},{"size":408,"mtime":1611508663707,"results":"37","hashOfConfig":"35"},{"size":58,"mtime":1611410862359,"results":"38","hashOfConfig":"35"},{"size":663,"mtime":1611767438564,"results":"39","hashOfConfig":"35"},{"size":470,"mtime":1611493320966,"results":"40","hashOfConfig":"35"},{"size":2294,"mtime":1611693791578,"results":"41","hashOfConfig":"35"},{"size":89,"mtime":1611408078324,"results":"42","hashOfConfig":"35"},{"size":378,"mtime":1611519756226,"results":"43","hashOfConfig":"35"},{"size":2020,"mtime":1611762969774,"results":"44","hashOfConfig":"35"},{"size":326,"mtime":1611420396295,"results":"45","hashOfConfig":"35"},{"size":435,"mtime":1611425496315,"results":"46","hashOfConfig":"35"},{"size":1970,"mtime":1611765706902,"results":"47","hashOfConfig":"35"},{"size":1725,"mtime":1611767130872,"results":"48","hashOfConfig":"35"},{"size":2211,"mtime":1611766273859,"results":"49","hashOfConfig":"35"},{"size":976,"mtime":1611664682022,"results":"50","hashOfConfig":"35"},{"size":1444,"mtime":1611766539613,"results":"51","hashOfConfig":"35"},{"size":331,"mtime":1611508833463,"results":"52","hashOfConfig":"35"},{"size":49,"mtime":1611513483090,"results":"53","hashOfConfig":"35"},{"size":5126,"mtime":1611683170512,"results":"54","hashOfConfig":"35"},{"size":1073,"mtime":1611703239010,"results":"55","hashOfConfig":"35"},{"size":552,"mtime":1611583637013,"results":"56","hashOfConfig":"35"},{"size":1539,"mtime":1611615362827,"results":"57","hashOfConfig":"35"},{"size":1140,"mtime":1611688022662,"results":"58","hashOfConfig":"35"},{"size":4473,"mtime":1611698481898,"results":"59","hashOfConfig":"35"},{"size":400,"mtime":1611610378253,"results":"60","hashOfConfig":"35"},{"size":5644,"mtime":1611772359873,"results":"61","hashOfConfig":"35"},{"size":1852,"mtime":1611697936503,"results":"62","hashOfConfig":"35"},{"size":3554,"mtime":1611698638410,"results":"63","hashOfConfig":"35"},{"size":288,"mtime":1611690640909,"results":"64","hashOfConfig":"35"},{"size":334,"mtime":1611690596230,"results":"65","hashOfConfig":"35"},{"size":3315,"mtime":1611764789054,"results":"66","hashOfConfig":"35"},{"size":414,"mtime":1611702748598,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"5g0i28",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/przem/Desktop/Builders/client/src/index.js",[],["145","146"],"/home/przem/Desktop/Builders/client/src/Routes.js",["147"],"import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport AdminRoute from './Admin/auth/AdminRoute'\nimport About from './MainComponents/About'\nimport Signin from './User/Signin'\nimport Home from './MainComponents/Home'\nimport Menu from './MainComponents/Menu'\nimport Construction from './ConstructionWorkPage/ConstructionWork'\nimport SteelWork from './SteelWorkPage/SteelWork'\nimport Scaffolding from './ScaffoldingPage/Scaffolding'\nimport Dashboard from './Admin/Admin'\nimport Gallery from './Gallery/Gallery'\nimport Comments from './Comments/Comments'\nimport Email from './Email/Email'\nimport EmailConf from './Confirmation/Email'\nimport CommentConf from './Confirmation/Comment'\nimport classes from './styles.module.css'\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/login\" exact component={Signin}></Route>\n        <Route path=\"/about\" exact component={About}></Route>\n        <Route path=\"/menu\" exact component={Menu}></Route>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/construction\" exact component={Construction}></Route>\n        <Route path=\"/steelwork\" exact component={SteelWork}></Route>\n        <Route path=\"/scaffolding\" exact component={Scaffolding}></Route>\n        <Route path=\"/gallery\" exact component={Gallery}></Route>\n        <Route path=\"/comments\" exact component={Comments}></Route>\n        <Route path=\"/getquote\" exact component={Email}></Route>\n        <Route path=\"/confirmationemail\" exact component={EmailConf}></Route>\n        <Route path=\"/confirmation\" exact component={CommentConf}></Route>\n        <AdminRoute path=\"/admin\" exact component={Dashboard}></AdminRoute>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Routes\n","/home/przem/Desktop/Builders/client/src/Layout/Layout.js",["148"],"import classes from './Layout.module.css'\nimport React, { useEffect } from 'react'\nimport AUX from '../Utils/Aux'\nimport Header from '../Header/Header'\nimport Footer from '../Footer/Footer'\n\nconst Layout = ({ children }) => {\n  return (\n    <AUX>\n      <div className={classes.main}>\n        <Header></Header>\n        {children}\n        <Footer></Footer>\n      </div>\n    </AUX>\n  )\n}\n\nexport default Layout\n","/home/przem/Desktop/Builders/client/src/Utils/Aux.js",[],"/home/przem/Desktop/Builders/client/src/MainComponents/Home.js",[],"/home/przem/Desktop/Builders/client/src/MainComponents/Menu.js",[],"/home/przem/Desktop/Builders/client/src/User/Signin.js",[],"/home/przem/Desktop/Builders/client/src/User/Signup.js",[],["149","150"],"/home/przem/Desktop/Builders/client/src/StyledComponents/StyledLink.js",["151","152"],"import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n\n  &:focus,\n  &:hover,\n  &:visited {\n    color: black;\n  }\n  ,\n  &:link {\n    color: black;\n  }\n  ,\n  &:active {\n    text-decoration: none;\n  }\n`\n\nexport default (props) => <StyledLink {...props} />\n","/home/przem/Desktop/Builders/client/src/Header/Header.js",[],["153","154"],"/home/przem/Desktop/Builders/client/src/HeaderSecondary/HeaderSecondary.js",[],"/home/przem/Desktop/Builders/client/src/MainPicture/MainPicture.js",[],"/home/przem/Desktop/Builders/client/src/MainComponents/About.js",[],"/home/przem/Desktop/Builders/client/src/UpperContent/UpperContent.js",[],"/home/przem/Desktop/Builders/client/src/ConstructionWorkPage/ConstructionWork.js",[],"/home/przem/Desktop/Builders/client/src/SteelWorkPage/SteelWork.js",[],"/home/przem/Desktop/Builders/client/src/ScaffoldingPage/Scaffolding.js",[],"/home/przem/Desktop/Builders/client/src/Footer/Footer.js",[],"/home/przem/Desktop/Builders/client/src/config.js",[],"/home/przem/Desktop/Builders/client/src/Admin/Admin.js",["155"],"import React, { useState, useEffect } from 'react'\nimport Layout from '../Layout/Layout'\nimport { isAuthenticated } from '../Admin/auth'\nimport { getCatIds, deleteCat, createNewCat } from './APIs/CategoryAPIs'\nimport { postPhoto } from './APIs/PhotoApis'\nimport classes from './Admin.module.css'\n\nconst Dashboard = () => {\n  //Variables\n  const [categoryName, setCatName] = useState('')\n  const [formDataPhoto, setPhotoFormData] = useState('')\n\n  const [categoryData, setCatIds] = useState([])\n\n  const [deleteCatId, setDeleteCatId] = useState('')\n\n  const { user, token } = isAuthenticated()\n  //Init functions\n  const init = () => {\n    setPhotoFormData(new FormData())\n  }\n\n  const getCategories = () => {\n    getCatIds().then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        let ids = []\n        data.map((e) => {\n          ids.push({ id: e._id, name: e.name })\n        })\n        setCatIds(ids)\n      }\n    })\n  }\n\n  useEffect(() => {\n    init()\n    getCategories()\n  }, [])\n\n  //State change handlers\n  const handleChangeCategory = (event) => {\n    setCatName(event.target.value)\n  }\n\n  const handleChangePhoto = (name) => (event) => {\n    const value = name === 'photo' ? event.target.files[0] : event.target.value\n    formDataPhoto.set(name, value)\n  }\n  // API functions\n  const submitCategory = (e) => {\n    e.preventDefault()\n    if (categoryName === '') {\n      return alert('Please provide a name')\n    }\n    createNewCat(user._id, token, categoryName).then((data, err) => {\n      if (data) {\n        alert('Category created')\n\n        return\n      } else {\n        alert('Something went wrong...')\n        window.location.reload()\n        return\n      }\n    })\n  }\n  const submitPhoto = (e) => {\n    e.preventDefault()\n    postPhoto(user._id, token, formDataPhoto).then((data, err) => {\n      if (data) {\n        alert('Photo uploaded')\n        window.location.reload()\n        return\n      } else {\n        return alert(err.error)\n      }\n    })\n  }\n\n  const deleteCategory = () => {\n    console.log(deleteCatId)\n    deleteCat(user._id, token, deleteCatId).then((data, err) => {\n      if (data) {\n        alert(data)\n        window.location.reload()\n        return\n      }\n      return alert('Server error')\n    })\n  }\n  //JSX Returning functions\n  const categoryForm = () => (\n    <div className={classes.formWrapper}>\n      <p className={classes.formTitle}>Create gallery category</p>\n      <form onSubmit={submitCategory} className={classes.selectDiv}>\n        <p className={classes.nameLabel}>Name</p>\n        <div className={classes.catName}>\n          <input\n            type=\"text\"\n            className={classes.nameInputbox}\n            onChange={(event) => handleChangeCategory(event)}\n            value={categoryName}\n          ></input>\n        </div>\n        <div className={classes.catBtn}>\n          <button className={classes.submitBtn}>Create category</button>\n        </div>\n      </form>\n    </div>\n  )\n\n  const deleteCategoryForm = () => (\n    <div className={classes.formWrapper}>\n      <div className={classes.formTitle}>Delete gallery category</div>\n      <div className={classes.selectDiv}>\n        <select\n          className={classes.selectEl}\n          onChange={(event) => {\n            setDeleteCatId(event.target.value)\n          }}\n        >\n          <option className={classes.selectEl}>Select category</option>\n          {categoryData &&\n            categoryData.map((data, i) => {\n              return (\n                <option key={i} value={data.id}>\n                  {data.name}\n                </option>\n              )\n            })}\n        </select>\n        <div className={classes.catBtn}>\n          <button onClick={deleteCategory} className={classes.deleteBtn}>\n            Delete category\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n\n  const photoForm = () => (\n    <div className={classes.formWrapper}>\n      <p className={classes.formTitle}>Post photo</p>\n      <form onSubmit={submitPhoto} className={classes.formDiv}>\n        <div className={classes.selectDiv}>\n          <select\n            className={classes.selectPhotoCat}\n            onChange={handleChangePhoto('category')}\n          >\n            <option className={classes.selectEl}>Select category</option>\n            {categoryData &&\n              categoryData.map((data, i) => {\n                return (\n                  <option key={i} value={data.id}>\n                    {data.name}\n                  </option>\n                )\n              })}\n          </select>\n        </div>\n        <div className={classes.catPhoto}>\n          <input\n            style={{ width: '100%' }}\n            onChange={handleChangePhoto('photo')}\n            type=\"file\"\n            name=\"photo\"\n            accept=\"image/*\"\n          />\n        </div>\n        <div className={classes.catBtn}>\n          <button className={classes.submitBtn}>Post photo</button>\n        </div>\n      </form>\n    </div>\n  )\n\n  return (\n    <Layout>\n      {categoryForm()}\n      {deleteCategoryForm()}\n      {photoForm()}\n    </Layout>\n  )\n}\n\nexport default Dashboard\n","/home/przem/Desktop/Builders/client/src/Admin/auth/index.js",[],"/home/przem/Desktop/Builders/client/src/Admin/auth/AdminRoute.js",["156"],"import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { isAuthenticated } from './index'\n\nconst AdminRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      isAuthenticated() &&\n      isAuthenticated().user.email === 'email@email.com' ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: { from: props.location },\n          }}\n        />\n      )\n    }\n  />\n)\n\nexport default AdminRoute\n","/home/przem/Desktop/Builders/client/src/Admin/APIs/CategoryAPIs.js",[],"/home/przem/Desktop/Builders/client/src/Admin/APIs/PhotoApis.js",[],"/home/przem/Desktop/Builders/client/src/Gallery/Gallery.js",["157","158","159"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport classes from './Gallery.module.css'\nimport { photosByCategoryId, deletePhoto } from '../Admin/APIs/PhotoApis'\nimport { getCatIds } from '../Admin/APIs/CategoryAPIs'\nimport { isAuthenticated } from '../Admin/auth/index'\nimport Spinner from './Spinner'\nimport Layout from '../Layout/Layout'\n\nconst Gallery = () => {\n  const [photos, setPhotos] = useState([])\n  const [categoryData, setCatIds] = useState([])\n  const [currentCategory, setCurrentCategory] = useState('')\n  const [currentCategoryId, setCurrentCategoryId] = useState('')\n  const [isLoading, setLoading] = useState(false)\n\n  const { user, token } = isAuthenticated()\n\n  const isAdmin = isAuthenticated() && user.email === 'email@email.com'\n  console.log(useHistory().location.pathname === '/gallery')\n  const getCategories = () => {\n    getCatIds().then((data) => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        let ids = []\n        data.map((e) => {\n          ids.push({ id: e._id, name: e.name })\n        })\n        setCatIds(ids)\n        console.log(ids)\n      }\n    })\n  }\n\n  const loadPhotos = (id) => {\n    setPhotos([])\n    photosByCategoryId(id).then((data, err) => {\n      if (err) {\n        console.log(err)\n      }\n      setPhotos(data)\n      setLoading(false)\n    })\n  }\n\n  const init = () => {\n    getCategories()\n  }\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  const clicked = (e) => {\n    if (window.innerWidth < 430) {\n      window.scroll(0, 600)\n    }\n    loadPhotos(e.target.value)\n    setCurrentCategoryId(e.target.value)\n    setCurrentCategory(e.target.name)\n    setLoading(true)\n  }\n\n  const deleteClicked = (event) => {\n    deletePhoto(user._id, token, event.target.value).then(() => {\n      loadPhotos(currentCategoryId)\n      setCurrentCategory(currentCategory)\n      setLoading(true)\n    })\n  }\n\n  const galleryButtons = () => {\n    return (\n      <div className={classes.buttons}>\n        {categoryData.length > 0 &&\n          categoryData.map((btn, i) => {\n            return (\n              <button\n                key={i}\n                value={btn.id}\n                name={btn.name}\n                className={classes.galleryButtons}\n                onClick={(event) => {\n                  clicked(event)\n                }}\n              >\n                {btn.name}\n              </button>\n            )\n          })}\n      </div>\n    )\n  }\n\n  const photosToRenderJSX = () => {\n    return (\n      <div className={classes.grid}>\n        {console.log(photos)}\n        {photos.length > 0 &&\n          photos.map((data, i) => {\n            console.log(data)\n            return (\n              <div className={classes.galleryDiv} key={i}>\n                <img\n                  className={classes.gridImg}\n                  key={i}\n                  alt=\"photo\"\n                  src={data.photo}\n                />\n                <button\n                  style={{ display: isAdmin ? '' : 'none' }}\n                  value={data._id}\n                  onClick={(event) => {\n                    deleteClicked(event)\n                  }}\n                  className={classes.delPhoto}\n                >\n                  Delete Photo\n                </button>\n              </div>\n            )\n          })}\n      </div>\n    )\n  }\n\n  const galleryTitleJSX = () => (\n    <div className={classes.galleryTitleDiv}>\n      <p className={classes.galleryTitle}>{currentCategory}</p>\n    </div>\n  )\n\n  const galleryMessageJSX = () => {\n    const noCategory = 'Choose category!'\n    const yesCategory = 'Take a look at out latest work!'\n    return (\n      <p className={classes.gallerySecond}>\n        {currentCategory ? yesCategory : noCategory}\n      </p>\n    )\n  }\n  const spinnerDiv = () => {\n    return (\n      <div className={classes.spinMain}>\n        <div className={classes.spinDiv}>\n          <Spinner />\n          <p className={classes.gallerySecond}>Loading...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Layout>\n      <div className={classes.upper}></div>\n      <p className={classes.galleryMain}>Gallery</p>\n      {galleryButtons()}\n      {galleryMessageJSX()}\n      <div className={classes.bottom}></div>\n      {isLoading && spinnerDiv()}\n      {currentCategory === !'' && spinnerDiv()}\n      {photos.length > 0 && galleryTitleJSX()}\n      {photos.length > 0 && photosToRenderJSX()}\n    </Layout>\n  )\n}\n\nexport default Gallery\n","/home/przem/Desktop/Builders/client/src/Gallery/Spinner.js",[],"/home/przem/Desktop/Builders/client/src/Comments/Comments.js",["160"],"import React, { useState, useEffect, Fragment } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport StarRatings from 'react-star-ratings'\nimport Layout from '../Layout/Layout'\nimport { isAuthenticated } from '../Admin/auth'\nimport {\n  fetchUnconfirmedComments,\n  fetchConfirmedComments,\n  postCommentAPI,\n} from '../Admin/APIs/CommentsApis'\n\nimport Comment from './Comment'\nimport classes from './Comments.module.css'\n\nconst Comments = () => {\n  //     Copyright 2018 Eric Kennedy\n\n  // Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n  // 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n  // 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n  // 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\n  // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  const { user, token } = isAuthenticated()\n  const [posted, setPosted] = useState(false)\n  const [confirmedComments, setConfComments] = useState([])\n  const [commentValues, setCommentValues] = useState({\n    content: '',\n    name: '',\n    rating: 5,\n  })\n\n  const init = () => {\n    let fileterdComments = []\n    let unfilteredComments = []\n    let allComments = []\n    fetchConfirmedComments().then((data, err) => {\n      if (data) {\n        fileterdComments = data\n        setConfComments(fileterdComments)\n      } else {\n        console.log(err)\n      }\n    })\n    if (isAuthenticated() && user.email === 'email@email.com') {\n      fetchUnconfirmedComments(user._id, token).then((data, err) => {\n        if (data) {\n          unfilteredComments = data\n          allComments = fileterdComments.concat(unfilteredComments)\n          setConfComments(allComments)\n        } else {\n          console.log(err)\n        }\n      })\n    }\n  }\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  const postComment = (e) => {\n    e.preventDefault()\n    postCommentAPI(commentValues).then((data, err) => {\n      if (data) {\n        setPosted(true)\n      } else {\n        alert(err.error)\n      }\n    })\n  }\n\n  const changeRating = (newRating) => {\n    setCommentValues({ ...commentValues, rating: newRating })\n  }\n\n  const handleChange = (name) => (event) => {\n    const value = event.target.value\n    setCommentValues({ ...commentValues, [name]: value })\n  }\n\n  const commentFormJSX = () => {\n    return (\n      <div className={classes.commentForm}>\n        <p className={classes.formTitle}>Post a comment</p>\n        <form onSubmit={postComment} className={classes.selectDiv}>\n          <p className={classes.nameLabel}>name</p>\n          <div className={classes.customerDiv}>\n            <input\n              type=\"name\"\n              className={classes.nameInputbox}\n              onChange={handleChange('name')}\n              value={commentValues.name}\n            ></input>\n          </div>\n          <div className={classes.textDiv}>\n            <p className={classes.nameLabel}>comment</p>\n            <textarea\n              type=\"content\"\n              className={classes.textContent}\n              onChange={handleChange('content')}\n              value={commentValues.content}\n            ></textarea>\n          </div>\n          <div className={classes.ratingDiv}>\n            <p className={classes.nameLabel}>rating</p>\n            <div className={classes.startDiv}>\n              <StarRatings\n                rating={commentValues.rating}\n                starRatedColor=\"orange\"\n                starDimension=\"2rem\"\n                changeRating={changeRating}\n                numberOfStars={5}\n                name=\"rating\"\n              />\n            </div>\n          </div>\n          <div className={classes.catBtn}>\n            <button className={classes.commentBtn}>Post</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  const commentsJSX = () => {\n    console.log(confirmedComments)\n    return (\n      <Fragment>\n        {confirmedComments.length > 0 &&\n          typeof confirmedComments === Array &&\n          confirmedComments.map((com, i) => {\n            return <Comment key={i} comment={com} />\n          })}\n      </Fragment>\n    )\n  }\n\n  const sectionTitleJSX = () => {\n    return (\n      <Fragment>\n        <p className={classes.sectionTitle}>Comment section</p>\n        <div className={classes.borderBottom}></div>\n      </Fragment>\n    )\n  }\n\n  return (\n    <Layout>\n      {sectionTitleJSX()}\n      {confirmedComments.length > 0 && commentsJSX()}\n      {commentFormJSX()}\n      {posted && <Redirect to=\"/confirmation\" />}\n    </Layout>\n  )\n}\n\nexport default Comments\n","/home/przem/Desktop/Builders/client/src/Admin/APIs/CommentsApis.js",[],"/home/przem/Desktop/Builders/client/src/Comments/Comment.js",[],"/home/przem/Desktop/Builders/client/src/Confirmation/Email.js",[],"/home/przem/Desktop/Builders/client/src/Confirmation/Comment.js",[],"/home/przem/Desktop/Builders/client/src/Email/Email.js",["161","162"],"import React, { useState, useEffect, Fragment } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { sendEmailAPI } from '../Admin/APIs/EmailAPI'\nimport classes from '../Comments/Comments.module.css'\nimport styles from '../MainComponents/About.module.css'\nimport css from './Email.module.css'\nimport Layout from '../Layout/Layout'\n\nconst Email = () => {\n  const [msgValues, setMsgValues] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    message: '',\n  })\n  const [sent, setSent] = useState(false)\n\n  const sendMessage = (e) => {\n    e.preventDefault()\n    sendEmailAPI(msgValues).then((data, err) => {\n      if (err) {\n        console.log('something went wrong')\n      } else {\n        setSent(true)\n      }\n    })\n  }\n\n  const handleChange = (name) => (event) => {\n    const value = event.target.value\n    setMsgValues({ ...msgValues, [name]: value })\n  }\n  const emailFormJSX = () => {\n    return (\n      <div className={classes.commentForm}>\n        {/* <p className={classes.formTitle}>Get quote!</p> */}\n        <form onSubmit={sendMessage} className={classes.selectDiv}>\n          <p className={classes.nameLabel}>name</p>\n          <div className={classes.customerDiv}>\n            <input\n              type=\"name\"\n              className={classes.nameInputbox}\n              onChange={handleChange('name')}\n            ></input>\n          </div>\n          <p className={classes.nameLabel}>phone</p>\n          <div className={classes.customerDiv}>\n            <input\n              type=\"phone\"\n              className={classes.nameInputbox}\n              onChange={handleChange('phone')}\n            ></input>\n          </div>\n          <p className={classes.nameLabel}>email</p>\n          <div className={classes.customerDiv}>\n            <input\n              type=\"email\"\n              className={classes.nameInputbox}\n              onChange={handleChange('email')}\n            ></input>\n          </div>\n          <div className={classes.textDiv}>\n            <p className={classes.nameLabel}>message</p>\n            <textarea\n              type=\"message\"\n              className={classes.textContent}\n              onChange={handleChange('message')}\n            ></textarea>\n          </div>\n          <div className={classes.catBtn}>\n            <button className={classes.commentBtn}>Send</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n  const infoJSX = () => {\n    return (\n      <div className={styles.contactDiv}>\n        <div className={styles.emailIcon}></div>\n        <p className={styles.emailValue}> areklondon1@gmail.com</p>\n        <div className={styles.phoneIcon}></div>\n        <p className={styles.phoneValue}> 07412524967</p>\n        <div className={styles.addresIcon}></div>\n        <p className={styles.adressValue}> 4 Haling Road, CR2 6HS</p>\n      </div>\n    )\n  }\n\n  const titleMessageJSX = () => <h1 className={css.title}>Give us a call</h1>\n\n  const quoteMessageJSX = () => (\n    <h1 className={css.title}>Or get a quote now!</h1>\n  )\n\n  return (\n    <Layout>\n      {titleMessageJSX()}\n      <div className={css.borderTop}></div>\n      {infoJSX()}\n      <div className={css.borderTop}></div>\n      {quoteMessageJSX()}\n      {emailFormJSX()}\n      {sent && <Redirect to=\"/confirmationemail\" />}\n    </Layout>\n  )\n}\n\nexport default Email\n","/home/przem/Desktop/Builders/client/src/Admin/APIs/EmailAPI.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":17,"column":8,"nodeType":"169","messageId":"170","endLine":17,"endColumn":15},{"ruleId":"167","severity":1,"message":"171","line":2,"column":17,"nodeType":"169","messageId":"170","endLine":2,"endColumn":26},{"ruleId":"163","replacedBy":"172"},{"ruleId":"165","replacedBy":"173"},{"ruleId":"167","severity":1,"message":"174","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"176","line":23,"column":1,"nodeType":"177","endLine":23,"endColumn":52},{"ruleId":"163","replacedBy":"178"},{"ruleId":"165","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":29,"column":22,"nodeType":"182","messageId":"183","endLine":29,"endColumn":24},{"ruleId":"167","severity":1,"message":"174","line":1,"column":17,"nodeType":"169","messageId":"170","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"181","line":27,"column":22,"nodeType":"182","messageId":"183","endLine":27,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":53,"column":6,"nodeType":"186","endLine":53,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":105,"column":17,"nodeType":"190","endLine":110,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":63,"column":6,"nodeType":"186","endLine":63,"endColumn":8,"suggestions":"191"},{"ruleId":"167","severity":1,"message":"171","line":1,"column":27,"nodeType":"169","messageId":"170","endLine":1,"endColumn":36},{"ruleId":"167","severity":1,"message":"192","line":1,"column":38,"nodeType":"169","messageId":"170","endLine":1,"endColumn":46},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["193"],["194"],"'Component' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["193"],["194"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["195"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["196"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"197","fix":"199"},"Update the dependencies array to be: [init]",{"range":"200","text":"201"},{"range":"202","text":"201"},[1465,1467],"[init]",[2920,2922]]